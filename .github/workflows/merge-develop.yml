name: pull-request
on:
  push:
    branches:
      - develop

jobs:

  coverage:
    runs-on: ubuntu-latest
    if: github.repository == 'NHSDigital/mesh-sandbox' && !contains(github.event.head_commit.message, 'tag release version:')
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: install poetry
        run: make install-poetry

      - name: cache virtualenv
        uses: actions/cache@v2
        with:
          path: |
            .venv
          key: ${{ runner.os }}-poetry-v2-${{ hashFiles('./poetry.lock') }}

      - name: git reset
        run: git reset --hard

      - name: install dependencies
        run: make install-ci

      - name: installs unrar
        run: |
          sudo apt update
          sudo apt-get install unrar -yq

      - name: setup java
        if: success() || failure()
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "11"

      - name: code coverage
        run: make coverage-ci

      - name: code coverage report
        if: ${{ github.event_name == 'pull_request' }}
        uses: orgoro/coverage@32a2af98e56f47d958cf4c64b1f5e02161f2853e
        with:
          coverageFile: reports/coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: 0.85

      - name: setup java
        if: success() || failure()
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"

      - name: provision sonar-scanner
        if: success() || failure()
        run: |
          export SONAR_VERSION="4.7.0.2747"
          wget -q "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_VERSION}.zip" -O sonar-scanner.zip
          unzip -q ./sonar-scanner.zip
          mv ./sonar-scanner-${SONAR_VERSION} ./sonar-scanner
          scripts/sonar_tests.py

      - name: run sonar scan
        if: success() || failure()
        run: |
          PATH="$PWD/sonar-scanner/bin:$PATH"
          sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: publish junit reports
        if: success() || failure()
        uses: mikepenz/action-junit-report@v2
        with:
          check_name: junit reports
          report_paths: reports/junit/*.xml

      - name: stop docker containers
        if: success() || failure()
        run: make down


  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'NHSDigital/mesh-sandbox' && !contains(github.event.head_commit.message, 'tag release version:')
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: clean
        run: |
          git clean -fdx
          find . -type f | xargs chmod g+w

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: install poetry
        run: make install-poetry

      - name: poetry build
        run: |
          poetry version patch
          version="$(poetry version | cut -d' ' -f2)"
          sed -E -i "s#__version__ = \"[0-9]+\.[0-9]+\.[0-9]+\"#__version__ = \"$version\"#" src/mesh_sandbox/__init__.py
          poetry build

      - name: poetry config
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

      - name: poetry publish
        run: poetry publish

      - name: tag and push
        run: |
          git config --global user.name "github"
          git config --global user.email "username@users.noreply.github.com"
          git add pyproject.toml
          git add src/mesh_sandbox/__init__.py
          version="$(poetry version | cut -d' ' -f2)"
          git commit -m "tag release version: ${version}"
          git tag "${version}"
          git push
          git push --tags
